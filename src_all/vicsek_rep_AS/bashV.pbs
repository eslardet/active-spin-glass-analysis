#!/bin/bash
#PBS -lwalltime=8:00:00
#PBS -lselect=1:ncpus=4:mem=8gb
#PBS -N V2D_rep_n0.20_phi0.3
#PBS -J 0-2079

#PBS -o output/
#PBS -e output/

num_s=20
num_Kstd=8

mode="G"
intMethod="E"
potMode="W"

N=1000

##phi_arr=($(seq 0.1 0.1 2.0))
##phi=${phi_arr[$(($PBS_ARRAYID / $num_s))]}
phi=0.3

gx=1.0
vp=1.0

##noise_arr=($(seq 0.10 0.10 1.00))
##noise=${noise_arr[$(($PBS_ARRAY_INDEX / $num_s))]}
noise=0.20

seed_arr=($(seq 1 1 20))
seed=${seed_arr[$(($PBS_ARRAY_INDEX % $num_s))]}
##seed=4

K_arr=($(seq -1.0 0.5 5.0))
##K_arr=(0.5 0.8 1.0 1.2 1.5 1.8)
K_AVG=${K_arr[$(($PBS_ARRAY_INDEX / $num_s / $num_Kstd))]}
##K_AVG=4.0

K_std_arr=($(seq 1.0 1.0 8.0))
K_STD=${K_std_arr[$((($PBS_ARRAY_INDEX / $num_s) % $num_Kstd))]}
##K_STD=5.0

xTy=5.0

dt=1e-4
DT=10.0
DTex=1000.0
eqT=1000.0
simulT=1000.0

cd $PBS_O_WORKDIR

bash runV.sh $N $phi $seed $noise $gx $vp $xTy $mode $K_AVG $K_STD $dt $DT $DTex $eqT $simulT $intMethod $potMode

cd $PBS_O_WORKDIR/analysis

module load anaconda3/personal
source activate asg

python3 main_stats.py $mode $N $phi $noise $K_AVG $K_STD $xTy $seed $simulT
##python3 main.py $mode $N $phi $noise $K_AVG $K_STD $xTy $seed $simulT
