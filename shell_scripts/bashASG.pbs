#!/bin/bash
#PBS -lwalltime=08:00:00
#PBS -lselect=1:ncpus=1:mem=1gb
#PBS -N V2D_N1k_test
##PBS -J 20-49

#PBS -o output/
#PBS -e output/

num_s=50
num_Kstd=1
num_Rp=1

mode="G"
intMethod="E"
initMode="R"

N=1000

##phi_arr=($(seq 0.1 0.1 2.0))
##phi=${phi_arr[$(($PBS_ARRAY_INDEX / $num_s))]}
phi=1.0

##Rp_arr=(10.0 15.0 20.0 30.0 40.0)
# Rp_arr=($(seq 0.1 0.1 0.9))
##Rp_arr=(0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 2.0 3.0 4.0 5.0)
##Rp=${Rp_arr[$((($PBS_ARRAY_INDEX / $num_s) % $num_Rp))]}
Rp=1.0

vp=1.0

noise_arr=($(seq 0.82 0.02 1.0))
##noise=${noise_arr[$(($PBS_ARRAY_INDEX / $num_s))]}
noise=0.70

seed_arr=($(seq 1 1 50))
##seed=${seed_arr[$(($PBS_ARRAY_INDEX % $num_s))]}
seed=123

##K_arr=($(seq -1.0 0.1 1.0))
##K_arr=($(seq -0.66 0.002 -0.562))
##K_arr=(0.0 1.0)
##K_arr=(1.0 1.5 2.0)
##K_AVG=${K_arr[$(($PBS_ARRAY_INDEX / $num_s / $num_Kstd))]}
K_AVG=1.0

##K_std_arr=($(seq 1.0 1.0 8.0))
K_std_arr=(0.0 1.0 4.0)
##K_STD=${K_std_arr[$((($PBS_ARRAY_INDEX / $num_s) % $num_Kstd))]}
K_STD=0.0

xTy=1.0

dt=0.005
DT=100.0
DTex=1000.0
eqT=0.0
simulT=100.0

savePos=1
saveInitPos=0
saveCoupling=0

module load anaconda3/personal
source activate asg

##cd $PBS_O_WORKDIR/analysis
##python3 main_del.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT

cd $PBS_O_WORKDIR
bash runASG.sh $N $phi $noise $seed $vp $Rp $xTy $initMode $mode $K_AVG $K_STD $dt $DT $DTex $eqT $simulT $savePos $saveInitPos $saveCoupling $intMethod

cd $PBS_O_WORKDIR/analysis

##module load anaconda3/personal
##source activate asg

#r_max=1
#tape_time=500

##python3 main_stats_moments.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT
##python3 psi_t.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT $initMode
##python3 psi_t_s1.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT $initMode
python3 main_stats.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT $initMode
##python3 del.py $mode $N $phi $noise $K_AVG $K_STD $Rp $xTy $seed $simulT
